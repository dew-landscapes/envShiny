% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/taskbutton_dynamic.R
\name{taskbutton_dynamic}
\alias{taskbutton_dynamic}
\title{An input_task_button that disables once its task is complete}
\usage{
taskbutton_dynamic(
  id,
  label_ready,
  loaded,
  changed = NULL,
  label_busy = "Processing...",
  label_done = "Loaded",
  label_changed = "Update",
  class = NULL,
  type = "primary"
)
}
\arguments{
\item{id}{inputID to track input/action (as any other shiny input).}

\item{label_ready}{Label to display before clicking i.e. ready state of input_task_button.}

\item{loaded}{#Logical; how to track loaded status (usually a reactiveValues value).}

\item{changed}{#Optional logical; how to track if the button should be clickable again, when `loaded==TRUE`.}

\item{label_busy}{Label to display when processing. Used directly in same argument of `input_task_button.`}

\item{label_changed}{Label to display when `loaded==TRUE` but new action is available and button is clickable again.}

\item{class}{Sent to `class` argument of all buttons (e.g. 'btn-sm')}

\item{type}{Sent to `type` argument of input_task_buttons (default 'primary')}
}
\value{
An `input_task_button`, or a disabled `actionButton` when action is complete.
}
\description{
This button type combines the 'processing' function of `bslib::input_task_button` with the 'disabled' functionality of `shiny::actionButton`.
}
\details{
Use within a `renderUI` function in the server function, and not in the UI, as it will need reactives to track 'load' status.
}
