% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/make_dir_table.R
\name{make_dir_table}
\alias{make_dir_table}
\title{Make table from output directory structure}
\usage{
make_dir_table(
  out_dir,
  dir_levels = c("root", "branch", "out", "project", "extent", "grain", "stores"),
  return_level = "grain"
)
}
\arguments{
\item{out_dir}{The *absolute* file path to an output directory.}

\item{dir_levels}{Character vector (treated as an orderd factor) describing the directory levels returned.
Default is usally fine, but some projects have an additional level below grain, e.g. 'aoi'}

\item{return_level}{Lowest directory level name to return. E.g. default 'grain' will return a df with names 'root' to 'grain'.}
}
\value{
A data frame with one column per directory level, named from 'root' (e.g. H:) to `return_level`. Distinct rows per file path.
}
\description{
Collect file paths and turn them into a table, with a column per level. Needed for projects that use multiple extents/grains.
}
\details{
Additional filtering (e.g. to filter folders within 'grain' that don't follow the latest targets setup)
is best done by setting a higher `return_level` then performing the final `filter(return_level != "") |> distinct()` on the result.
}
\examples{
\dontrun{
range_dir <- fs::path_abs(here::here("..", "..", "out", "envRange"))
regcont_dir <- fs::path_abs(here::here("..", "..", "out", "envRegCont"))


make_dir_table(range_dir)
make_dir_table(range_dir, return_level = "stores")

make_dir_table(regcont_dir,
               dir_levels = c("root", "branch", "out", "proj", "extent", "grain",
                              "aoi"),
               return_level = "aoi"
)

## For an out-directory with non-targets folders within 'grain':
make_dir_table(cleaned_dir, return_level = "stores") |>
  dplyr::group_by(extent, grain) |>
  dplyr::filter("setup" \%in\% stores) |>   ## filter to newer folders that use targets
  dplyr::select(-stores) |>
  dplyr::distinct()
}

}
